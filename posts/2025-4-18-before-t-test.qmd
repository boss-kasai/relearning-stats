---
title: "t検定をする前に"
format: html
author: "ThePastOfDice"
date: '2025-04-18'
last-modified: "2025-04-18"
categories: ["R"]
tags: ["R", "t-test"]
---

t検定のことを書こうと思ったのですが、よく考えたらt検定の前に事前に確認するべきことがあったので、今回はそのお話です。

実際の分析の前にやった方が良いことはたくさんあると思います。
基礎統計量を見る
欠損値の確認
データの可視化
などなど

今回はt検定前に見た方が良いかなと思う下記３つを取り上げてみます。

- 正規性
- 等分散性
- 外れ値

## 正規性

正規性とはデータが正規分布に従っている(近い)かどうかを意味します。
正規分布は、平均を中心に左右対称な釣鐘型の分布になってるやつです。
t検定や分散分析は正規分布を前提にしている分析手法なので、正規分布をしていない場合は他の分析方法を検討することになったりします。
外れ値が極端に多かったり、天井効果などは想像しやすい例かもしれません。

今回は、有名なシャピロ・ウィルク(Shapiro-Wilk)検定をやってみます。

```{r}
shapiro.test(ToothGrowth$len[ToothGrowth$supp == "OJ"])
```

１行ずつ見て行きましょう。

```
Shapiro-Wilk normality test
```
Shapiro-Wilk検を実施しましたよってことです。

```
data:  ToothGrowth$len[ToothGrowth$supp == "OJ"]
```
ToothGrowth データの中の、supp（サプリメント）が "OJ" の行だけを抜き出した、len（歯の長さ）のデータを検定対象にしたことを示しています。

```
W = 0.91784, p-value = 0.02359
```
- `W = 0.91784`	Shapiro-Wilk検定統計量（正規性にどれだけ一致するかの指標）
- `p-value = 0.02359`	p値：正規分布からの逸脱が偶然で起こる確率

p値が0.05未満なので、この`ToothGrowth$len[ToothGrowth$supp == "OJ"]`は正規分布していないということになります。
t検定の記事でこのデータを使ってしまっていましたが、実際は不適切だったかもしれません。
そんな時はノンパラメトリック検定をやるんだったと思います。
なんとなくしか覚えていないので、ノンパラメトリック検定についてはまた別記事で。

とりあえず、`ToothGrowth$len[ToothGrowth$supp == "VC"]`も正規性を確認しておきましょう。

```{r}
shapiro.test(ToothGrowth$len[ToothGrowth$supp == "VC"])
```

各行の解説は省略しますが、p値が0.05以上なのでこちらは正規性があったということで、正規分布とみなせます。

## 等分散性

次は等分散性を見て行きましょう。
**「等分散性（とうぶんさんせい、equal variance）」**とは、**「比較する複数のグループでデータのばらつき（＝分散）が同じくらいかどうか」**を意味します。

`p > 0.05` → 分散が等しい（`var.equal = TRUE` を指定しても良い）

```{r}
var.test(len ~ supp, data = ToothGrowth)
```

さて、実行結果を１行ずつ確認して行きましょう。

```
F test to compare two variances
```
2つのグループ（ここでは "OJ" vs "VC"）の 分散が等しいかどうか を比較する F検定（F test）を実施したことを示しています。

```
data:  len by supp
```
検定対象データがlenという変数をsuppでグループ分けしたことが出力されています。

```
F = 0.6386, num df = 29, denom df = 29, p-value = 0.2331
```
- `F = 0.6386`  **分散の比（大きい分散 / 小さい分散）**に基づいて計算されたF値。1に近いほど分散が等しい。
- `num df = 29, denom df = 29`  自由度：各グループのデータ数（30）−1 = 29
- `p-value = 0.2331`  p値（有意確率）。

今回の分析結果から、p値が0.05より大きいので、「分散に有意な差はない（＝等分散性あり）」と判断することができます。これならstudentのt検定ができそうですね。まぁ、正規性に問題があるのですが笑


## 外れ値
最後は外れ値に関してみて行きます。
外れ値に関しては、箱ひげ図で見るのが簡単だと思います。
箱ひげ図で点（○）があれば外れ値の可能性ありです。

`boxplot()` 関数では外れ値（outlier）は自動で統計的に判定されています。
この判定には、**「IQR（四分位範囲）に基づくルール」**が使われています。

```
外れ値 = 以下のどちらかに該当する値
  ・Q1（第1四分位数）よりも小さい → Q1 - 1.5 × IQR
  ・Q3（第3四分位数）よりも大きい → Q3 + 1.5 × IQR

IQR	Interquartile Range（四分位範囲）＝ Q3 - Q1
```

まずは、ここまで使用してきたToothGrowthのデータを見てみましょう。
シンプルな箱ひげ図で見てみましょう。
図があるので先にコードの説明をします。
- `boxplot` 箱ひげ図を作成する関数です。
- `len ~ supp`　`len`のデータを`supp`でグループ分けして、図を作成します。
- `data = ToothGrowth`　使用するデータを指定しています。

```{r}
boxplot(len ~ supp, data = ToothGrowth)
```

箱ひげ図に点がないので、外れ値はなさそうです。
せっかくなので、外れ値のあるデータも見てみましょう。
`cars` という、speed(スピード)とdist(制動距離)についてのデータです(気になる方は、データを詳しくみてください)。
実際に箱ひげ図を作成してみましょう。
コードの解説
```
boxplot(データフレーム名$列名)
```

```{r}
boxplot(cars$dist)
```

120の部分に点が表示されています。
これが外れ値です。
外れ値の原因や処理方法はデータを詳しくみて判断するしかないと思います。

外れ値の確認は一旦こんな感じでいいでしょう。
データの可視化に関しては、深くて面白い世界なのでまた別で取り上げられればと思います。
t検定など分析をやる前には、データを事前にしっかり見ておきたいですね。
では、今回はこの辺で